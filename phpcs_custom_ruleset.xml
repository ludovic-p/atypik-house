<?xml version="1.0"?>
<ruleset name="PSR-2 coding standard">
    <description>PSR-2 coding standards</description>

    <!-- display progress -->
    <arg value="p"/>
    <arg name="colors"/>
    <arg value="s"/>

    <!-- inherit rules from: -->
    <rule ref="PSR1"/>

    <!-- PSR2 Custom Rules -->
    <rule ref="PSR2"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>

    <rule ref="PSR2.Methods.FunctionCallSignature.SpaceAfterCloseBracket">
        <severity>0</severity>
    </rule>
    <rule ref="PSR2.Methods.FunctionCallSignature.OpeningIndent">
        <severity>0</severity>
    </rule>
    <rule ref="PSR2.Files">
        <exclude name="PSR2.Files.EndFileNewline.NoneFound" />
    </rule>

    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>

    <!-- There MUST NOT be trailing whitespace at the end of non-blank lines. -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
        <severity>0</severity>
    </rule>

    <!-- All PHP files MUST use the Unix LF (linefeed) line ending. -->
    <rule ref="Generic.Files.LineLength">
        <exclude name="Generic.Files.LineLength.TooLong" />
    </rule>

    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n"/>
        </properties>
    </rule>

    <rule ref="PEAR">
        <exclude name="PEAR.NamingConventions.ValidFunctionName" />
        <exclude name="PEAR.NamingConventions.ValidVariableName" />
        <exclude name="PEAR.Commenting.ClassComment" />
        <exclude name="PEAR.Commenting.FileComment" />
        <exclude name="PEAR.Commenting.InlineComment" />
        <exclude name="PEAR.Commenting.FunctionComment.MissingParamComment" />
    </rule>


    <rule ref="Squiz.Commenting.FunctionComment.TypeHintMissing" />
    <rule ref="Squiz.Commenting.FunctionComment.ScalarTypeHintMissing" />

    <!-- Code MUST use an indent of 4 spaces, and MUST NOT use tabs for indenting. -->
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="ignoreIndentationTokens" type="array">
                <element value="T_COMMENT"/>
                <element value="T_DOC_COMMENT_OPEN_TAG"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

    <rule ref="Generic.Commenting">
        <exclude name="Generic.Commenting.DocComment.MissingShort" />
    </rule>

    <!-- PHP keywords MUST be in lower case. -->
    <rule ref="Generic.PHP.LowerCaseKeyword"/>

    <!-- The PHP constants true, false, and null MUST be in lower case. -->
    <rule ref="Generic.PHP.LowerCaseConstant"/>

    <!-- Control Structures -->
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpen" />
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeClose" />
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>

    <!-- Paths to check -->
    <file>src</file>
    <file>test</file>
</ruleset>
